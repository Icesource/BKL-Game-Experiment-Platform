export default {
  route: {
    dashboard: 'Dashboard',
    documentation: 'Documentation',
    guide: 'Guide',
    permission: 'Permission',
    pagePermission: 'Page Permission',
    rolePermission: 'Role Permission',
    directivePermission: 'Directive Permission',
    icons: 'Icons',
    components: 'Components',
    tinymce: 'Tinymce',
    markdown: 'Markdown',
    jsonEditor: 'JSON Editor',
    dndList: 'Dnd List',
    splitPane: 'SplitPane',
    avatarUpload: 'Avatar Upload',
    dropzone: 'Dropzone',
    sticky: 'Sticky',
    countTo: 'Count To',
    componentMixin: 'Mixin',
    backToTop: 'Back To Top',
    dragDialog: 'Drag Dialog',
    dragSelect: 'Drag Select',
    dragKanban: 'Drag Kanban',
    charts: 'Charts',
    keyboardChart: 'Keyboard Chart',
    lineChart: 'Line Chart',
    mixChart: 'Mix Chart',
    example: 'Example',
    nested: 'Nested Routes',
    menu1: 'Menu 1',
    'menu1-1': 'Menu 1-1',
    'menu1-2': 'Menu 1-2',
    'menu1-2-1': 'Menu 1-2-1',
    'menu1-2-2': 'Menu 1-2-2',
    'menu1-3': 'Menu 1-3',
    menu2: 'Menu 2',
    Table: 'Table',
    dynamicTable: 'Dynamic Table',
    dragTable: 'Drag Table',
    inlineEditTable: 'Inline Edit',
    complexTable: 'Complex Table',
    tab: 'Tab',
    form: 'Form',
    createArticle: 'Create Article',
    editArticle: 'Edit Article',
    articleList: 'Article List',
    errorPages: 'Error Pages',
    page401: '401',
    page404: '404',
    errorLog: 'Error Log',
    excel: 'Excel',
    exportExcel: 'Export Excel',
    selectExcel: 'Export Selected',
    mergeHeader: 'Merge Header',
    uploadExcel: 'Upload Excel',
    zip: 'Zip',
    pdf: 'PDF',
    exportZip: 'Export Zip',
    theme: 'Theme',
    clipboardDemo: 'Clipboard',
    i18n: 'I18n',
    externalLink: 'External Link',
    usermanager: 'User Manager',
    gamemanager: 'Game Manager'
  },
  navbar: {
    logOut: 'Log Out',
    dashboard: 'Dashboard',
    github: 'Github',
    theme: 'Theme',
    size: 'Global Size'
  },
  login: {
    title: 'Login Form',
    logIn: 'Login',
    username: 'Username',
    password: 'Password',
    any: 'any',
    thirdparty: 'Or connect with',
    thirdpartyTips: 'Can not be simulated on local, so please combine you own business simulation! ! !',
    register: 'register'
  },
  documentation: {
    documentation: 'Documentation',
    github: 'Github Repository'
  },
  permission: {
    addRole: 'New Role',
    editPermission: 'Edit',
    roles: 'Your roles',
    switchRoles: 'Switch roles',
    tips: 'In some cases, using v-permission will have no effect. For example: Element-UI  el-tab or el-table-column and other scenes that dynamically render dom. You can only do this with v-if.',
    delete: 'Delete',
    confirm: 'Confirm',
    cancel: 'Cancel'
  },
  guide: {
    description: 'The guide page is useful for some people who entered the project for the first time. You can briefly introduce the features of the project. Demo is based on ',
    button: 'Show Guide'
  },
  components: {
    documentation: 'Documentation',
    tinymceTips: 'Rich text is a core feature of the management backend, but at the same time it is a place with lots of pits. In the process of selecting rich texts, I also took a lot of detours. The common rich texts on the market have been basically used, and I finally chose Tinymce. See the more detailed rich text comparison and introduction.',
    dropzoneTips: 'Because my business has special needs, and has to upload images to qiniu, so instead of a third party, I chose encapsulate it by myself. It is very simple, you can see the detail code in @/components/Dropzone.',
    stickyTips: 'when the page is scrolled to the preset position will be sticky on the top.',
    backToTopTips1: 'When the page is scrolled to the specified position, the Back to Top button appears in the lower right corner',
    backToTopTips2: 'You can customize the style of the button, show / hide, height of appearance, height of the return. If you need a text prompt, you can use element-ui el-tooltip elements externally',
    imageUploadTips: 'Since I was using only the vue@1 version, and it is not compatible with mockjs at the moment, I modified it myself, and if you are going to use it, it is better to use official version.'
  },
  table: {
    dynamicTips1: 'Fixed header, sorted by header order',
    dynamicTips2: 'Not fixed header, sorted by click order',
    dragTips1: 'The default order',
    dragTips2: 'The after dragging order',
    title: 'Title',
    importance: 'Imp',
    type: 'Type',
    remark: 'Remark',
    search: 'Search',
    add: 'Add',
    export: 'Export',
    reviewer: 'reviewer',
    id: 'ID',
    date: 'Date',
    author: 'Author',
    readings: 'Readings',
    status: 'Status',
    actions: 'Actions',
    edit: 'Edit',
    publish: 'Publish',
    draft: 'Draft',
    delete: 'Delete',
    cancel: 'Cancel',
    confirm: 'Confirm'
  },
  example: {
    warning: 'Creating and editing pages cannot be cached by keep-alive because keep-alive include does not currently support caching based on routes, so it is currently cached based on component name. If you want to achieve a similar caching effect, you can use a browser caching scheme such as localStorage. Or do not use keep-alive include to cache all pages directly. See details'
  },
  errorLog: {
    tips: 'Please click the bug icon in the upper right corner',
    description: 'Now the management system are basically the form of the spa, it enhances the user experience, but it also increases the possibility of page problems, a small negligence may lead to the entire page deadlock. Fortunately Vue provides a way to catch handling exceptions, where you can handle errors or report exceptions.',
    documentation: 'Document introduction'
  },
  excel: {
    export: 'Export',
    selectedExport: 'Export Selected Items',
    placeholder: 'Please enter the file name (default excel-list)'
  },
  zip: {
    export: 'Export',
    placeholder: 'Please enter the file name (default file)'
  },
  pdf: {
    tips: 'Here we use window.print() to implement the feature of downloading PDF.'
  },
  theme: {
    change: 'Change Theme',
    documentation: 'Theme documentation',
    tips: 'Tips: It is different from the theme-pick on the navbar is two different skinning methods, each with different application scenarios. Refer to the documentation for details.'
  },
  tagsView: {
    refresh: 'Refresh',
    close: 'Close',
    closeOthers: 'Close Others',
    closeAll: 'Close All'
  },
  settings: {
    title: 'Page style setting',
    theme: 'Theme Color',
    tagsView: 'Open Tags-View',
    fixedHeader: 'Fixed Header',
    sidebarLogo: 'Sidebar Logo'
  },
  app: {
    loginTitle: 'Sustainability Game Theory',
    loginTip: 'Please use the email to register and login',
    changeLanguage: 'change language',
    email: 'email',
    phone: 'phone',
    school: 'school',
    studentId: 'studentId',
    password: 'password',
    age: 'age',
    gender: 'gender',
    QQ: 'Wechat/QQ/Facebook',
    male: 'male',
    female: 'female',
    name: 'name',
    id: 'id',
    lastActive: 'last time to operate',
    operate: 'operate',
    viewRecentActions: 'view recent actions',
    welcome: 'Welcome!',
    instruction: 'You are now participating in an interesting experiment. Please read the following instructions carefully. Fully understanding the instructions will allow you to perform better in this game and obtain more money! \n' +
      'There are common pool resources that every player can extract. Each player can select one strategy between cooperation and defection. According to his strategy and the volume of common pool resources, he can obtain a given resource. At each round, one player knows (1) his strategy, (2) the payoff he obtains, (3) the strategy of one of his neighbors, (4) the payoff of this neighbor obtains, and (5) the resource volume. The player has to select the strategy of next round, cooperation or defection. The payoff of each round is varied even if the same strategy is selected. If the common pool resources are extinct, there are no resources for future use. ',
    instruction2:'Please click to enter each game. These games are independent of each other, so the results in either game do not affect other games. If the resources of a game disappear, no one can make a profit in the game and the game will start again. But the restart of the game does not affect the gains you get in other games.',
    startGameInstruction: 'Please start the game from the following options',
    recentActionsTitle: 'recent actions',
    gameName: 'game name',
    strategy: 'strategy',
    updateGame: 'Edit game parameters',
    createGame: 'Create a game',
    reset: 'reset',
    Enable: 'enable',
    Disable: 'disable',
    cooperation: 'cooperation',
    betray: 'defection',
    quiz: 'Conduct a quiz',
    noOperate: 'The user has not done anything'
  },
  message: {
    usernamePwdError: 'The account name or password is incorrect',
    addSuccess: 'Add success',
    addFail: 'Add fail',
    updateGameSuccess: 'Update game parameters successfully',
    updateGameFail: 'Failed to update game parameters',
    resetGameSuccess: 'Reset game success',
    resetGameFail: 'Reset game failed',
    changeGameStatusSuccess: 'Change game state successfully',
    changeGameStatusFail: ' Change game state failed',
    unAnswered: ' Please complete the answer sheet first.',
    getGameInfoSuccess: ' Get the player\'s round of information successfully',
    getGameInfoFail: ' Failed to get the player\'s information',
    chooseStrategySuccess: ' Successful selection strategy',
    chooseStrategyFail: ' Selection policy failed',
    specialCharacters: ' Please do not enter special characters in the parameters',
    loginSuccess: ' login successful',
    unknownError: ' unknown error',
    getInfoSuccess: ' Get current user information successfully',
    getInfoFail: ' Failed to get current user information',
    logoutSuccess: ' Logout success',
    registerSuccess: ' registration success',
    emailOccupy: ' The email is already occupied',
    registerFail: ' registration failed',
    queryFail: ' Query failed',
    querySuccess: ' Query successful',
    getUserListSuccess: ' Get the user list successfully',
    getUserListFail: ' Failed to get user list',
    tokenError: ' token error',
    loginFirst: ' please log in first',
    roleError: ' Insufficient permissions',
    getGamelistFail: ' Failed to get game list',
    getGamelistSuccess: ' Get the game list successfully',
    numberIsFull: ' The number is full',
    answerSuccess: ' Successful answer',
    answerFail: ' Answer failed',
    answerError: ' Wrong answer'
  },
  gameview: {
    allBenefit: 'Total payoff',
    playerStrategy: 'Your present strategy',
    playerBenefit: 'You present payoff',
    neiborChoose: ' The strategy of one of your neighbors',
    neiborBenefit: 'The payoff of this neighbor',
    resource: ' Resource volume',
    resourceTip: 'When the resource volume is 0, everyone can\'t get the payoff',
    nextStrategy: 'The strategy you select at the next step',
    benefit: 'revenue',
    cooperatorRatio: 'Cooperator Ratio',
    traitorRatio: 'Defector Ratio',
    studentNO: 'student ID',
    backToTutorial: 'Click here to return to the guide'
  },
  questions: {
    Q1: 'Can you chat with your friends when you play this game? ',
    Q2: 'If resource volume is 0, what will happen? ',
    Q3: 'Before you make the decision, do you know the payoff you will obtain?',
    Q1A: 'Your strategy; ',
    Q1B: 'Resource you obtain; ',
    Q1C: 'Strategy of one of your neighbors;',
    Q1D: 'Strategies of other players;',
    Q1E: 'Volume of common pool resources.',
    yes: 'yes',
    no: 'no',
    Q3A: 'Defector can obtain payoff;',
    Q3B: 'Cooperator can obtain payoff;',
    Q3C: 'No players can obtain any payoffs;',
    Q3D: 'resources will emerge next round and the game can continue'
  },
  tutorial:{
    t1: 'You are now participating in an interesting experiment composed by many different games. Please read the following instructions carefully. Fully understanding them will allow you to perform better in the game and obtain more money!  ',
    t2: 'There are common resources that every player can extract. Each player could select one strategy between cooperation and defection. The resources can grow or regenerate with a given rate by themselves. Cooperation means that the extraction rate does not exceed the regeneration threshold of resource, i.e. if all players select cooperation the common pool will still be at a sustainable state; Defection means that the extraction rate exceeds the regeneration threshold of resource, i.e. if all players select defection the common pool will be at a depleting state. ',
    t3: 'After one game starts, the screen shows the information and you should select the strategy according to them. At each time step, you extract some resources from the common pool according to your strategy and then you obtain a payoff according to your strategy, your neighbors’ strategies and the resource volume. The range of resource volume is between 0 and 1. If it is 0, i.e. the common pool resources are extinct, there are no resources for the future use and neither you and the other players will gain further payoffs. ',
    t4:'Imaging that you are a fisherman catching fish from an open-access lake. If the lake is overfished, fish stock will deplete, i.e., there is no fish for all future fishermen. At each day, you should select a strategy, cooperation or defection, according to the known information. Then you go to catch fish according to your strategy. Finally, you catch the fish and the fish catch depends on your strategy, your neighbors’ strategies and the fish stock in the lake. ',
    t5:'You are one player in the games and can receive the real-world money according to the payoffs you obtain in the games. If you are an active player in one game, you will play more time than others. Finally, you can obtain more total payoff in general. If during the game you chat with other people, you will be logged out of the game for a certain period (Remark: I cannot do it by technical means). Of course, being out of the game will have a negative impact on your total payoff.  ',
  }
}
